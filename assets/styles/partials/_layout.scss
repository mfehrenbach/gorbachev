@use 'utilities' as *;

@forward 'typography';
@forward 'fonts';
@forward 'links';



// Variables and layout.
body {
	@extend %font--verdana;
	@extend %typography--layout;



	// Type.
	--typography--size--floor:   14;
	--typography--size--middle:  16;
	--typography--size--ceiling: 20;

	--typography--size:    var(--typography--size--floor);
	--typography--leading: 1.8;

	// Palette.
	--opacity--primary:   90%;   // #EEE equivalent on slate.
	--opacity--secondary: 70%;   // #CCC.
	--opacity--tertiary:  51.5%; // #AAA.
	--opacity--middle:    31.5%; // #888.
	--opacity--slight:    13%;   // #606870.

	--color--slate:      #4a525a;
	--color--slate--rgb: 74, 82, 90;

	--color--primary:   rgba(255, 255, 255, var(--opacity--primary));
	--color--secondary: rgba(255, 255, 255, var(--opacity--secondary));
	--color--tertiary:  rgba(255, 255, 255, var(--opacity--tertiary));
	--color--middle:    rgba(255, 255, 255, var(--opacity--middle));
	--color--slight:    rgba(255, 255, 255, var(--opacity--slight));

	// Map to use.
	--color:                  var(--color--primary);
	--color--background:      var(--color--slate);
	--color--background--rgb: var(--color--slate--rgb);

	--color--highlight:       var(--color--slight);
	--color--highlight--more: var(--color--middle);
	--color--hover:           white;
	--color--underline:       var(--color--middle);

	// Links.
	--link--enlargement: var(--typography--x);
	--link--outline:     2px;
	--link--radius:      calc(var(--typography--x) / 3);
	--link--transition:  50ms;



	background-color: var(--color--background);
	color:            var(--color--primary);
	padding-left:     calc(env(safe-area-inset-left, 0rem) * 0.72); // Right to the notch edge.
	padding-right:    calc(env(safe-area-inset-right, 0rem) * 0.72);



	@include legacy {
		// Scale down for legacy devices, based on the viewport.
		--typography--factor: 1; // With the unit already in the calc.
		--typography--size:   calc(var(--typography--size--floor) / #{ $legacy-threshold } * 100vw);

		@include landscape { --typography--size: calc(var(--typography--size--floor) / #{ $legacy-threshold } * 100vh) }
	}

	@include width(744) {
		@include tall(480) {
			// Start scaling up type when there is room.
			--typography--factor: 1;
			--typography--size:   clamp(
															calc(var(--typography--size--floor) * 0.1rem),
															calc(var(--typography--size--floor) / 744 * 100vw),
															calc(var(--typography--size--middle) * 0.1rem)
														);
		}
	}

	@include width(1080) {
		@include tall(800) {
			// Further on tall screens, based on height.
			--typography--factor: 1;
			--typography--size:   clamp(
															calc(var(--typography--size--middle) * 0.1rem),
															calc(var(--typography--size--middle) / 800 * 100vh),
															calc(var(--typography--size--ceiling) * 0.1rem)
														);
		}
	}



	// Main layout.
	#Box {
		display:               grid;
		grid-template-columns: minmax(0, 1fr); // Since “auto” is the min otherwise.
		padding:               var(--typography--line--3) var(--typography--lead); // Less needed above optically (iOS).
		row-gap:               var(--typography--line--2);
		grid-template-areas:
			'banner'
			'sidebar'
			'main';

		// Even for Chrome.
		@include browser(chrome) { padding: var(--typography--line--4) var(--typography--lead) }


		#Banner {
			grid-area:     banner;
			margin-bottom: calc(var(--typography--line-height) * 2); // Just extra lines, no leading.

			// The logo.
			a {
				@extend %link--element;

				--intrinsic--width:  720; // From the PNG.
				--intrinsic--height: 168;

				--content--width:  644; // Wordmark itself.
				--content--height: 72;

				--content--inset--left: 47;
				--content--inset--top:  44;

				--link--enlargement: calc(var(--typography--x) * 2); // Around circle overshoot.

				aspect-ratio: var(--content--width) / var(--content--height);
				box-sizing:   content-box; // Padding outside.
				height:       calc(var(--typography--cap) + var(--typography--lead));
				position:     relative;
				width:        auto;


				img {
					aspect-ratio:               var(--intrinsic--width) / var(--intrinsic--height);
					filter:                     brightness(1.16); // Take image to white.
					height:                     initial; // Cancel inline.
					margin-left:                calc(-1 * var(--content--inset--left) / var(--content--width) * (100% - var(--link--enlargement) * 2));
					margin-top:                 calc(-1 * var(--content--inset--top) / var(--content--width) * (100% - var(--link--enlargement) * 2));
					max-width:                  initial; // Cancel reset.
					opacity:                    var(--opacity--primary); // Match body copy.
					position:                   absolute;
					transition-duration:        var(--link--transition); // Match other links.
					transition-property:        opacity;
					transition-timing-function: ease-in-out;
					width:                      calc(var(--intrinsic--width) / var(--content--width) * (100% - var(--link--enlargement) * 2));
					// Percentages derive from width, so use that for height offset too.

					// Sharpen up Safari scaling, particularly at 1x.
					@include browser(safari) { image-rendering: optimizeQuality }

					@include hover { opacity: 100% } // Match other links.
				}
			}
		}



		// Sticky stuff.
		%sticky-header {

			--sticky--fade:     var(--typography--line-height);
			--sticky--forehead: var(--typography--line-height); // Optically with bottom address bar (iOS).
			--sticky--offset:   calc(var(--sticky--forehead) + var(--typography--cap));

			// Chrome needs the prefix; Safari understands with and without.
			-webkit-mask:     linear-gradient(to top, transparent, var(--color--tertiary) var(--sticky--fade), var(--color--hover) var(--sticky--fade));
			background-color: var(--color--background);
			margin-left:      calc(-1 * var(--typography--lead));
			margin-right:     calc(-1 * var(--typography--lead));
			position:         sticky;

			@include browser(chrome) { --sticky--forehead: var(--typography--line) }
		}



		#Sidebar {
			@extend %sticky-header;

			--sticky--top: 0;

			column-gap:     var(--typography--line);
			display:        flex;
			grid-area:      sidebar;
			margin-bottom:  calc(-1 * var(--typography--lead) - var(--sticky--fade));
			margin-top:     calc(-1 * var(--sticky--forehead));
			overflow-x:     scroll;
			padding-bottom: calc(var(--typography--lead) + var(--sticky--fade));
			padding-left:   var(--typography--lead);
			padding-right:  var(--typography--line);
			padding-top:    var(--sticky--forehead);
			top:            var(--sticky--top);
			z-index:        2; // Over the sticky headers in the main column.

			&::-webkit-scrollbar { display: none } // Hide scrollbar.

			// Byline.
			> p:first-child {
				@extend %font--extended;
				@extend %font--gill-sans--on-verdana;
				@extend nobr;

				strong { @extend %font--uppercase }
			}

			// Navigation.
			> ul {
				--color: var(--color--secondary);

				column-gap: var(--typography--line);
				display:    flex;

				> li {
					@extend %font--extended;
					@extend %font--gill-sans--on-verdana;
					@extend %font--uppercase;
					@extend %typography;
					@extend nobr;

					> a {
						@extend %link--text;
						@extend %typography--underline--disable;
					}

					&:has(> script:only-child) { display: none } // Turn off empty linked list item.
				}
			}

			// Ad block.
			#SidebarMartini { display: none } // Hide on single-column (show dupe in main).
		}



		#Main {
			grid-area: main;

			// iOS bottom-edge fade for scrolled address bar (slate on slate).
			&:after {
				background-color: var(--color--background);
				content:          '';
				height:           var(--typography--line);
				left:             0;
				mask:             linear-gradient(transparent, var(--color--tertiary));
				pointer-events:   none;
				position:         fixed;
				right:            0;
				top:              calc(100vh - var(--typography--line));
				transform:        translateZ(0); // Force rendering before collapse.
				z-index:          2; // Above sticky titles.

				@include browser(chrome) { display: none }
			}
		}


		// Ad block.
		#SidebarMartini div, #MainMartini {
			align-items: center;
			display:     flex;
			gap:         var(--typography--lead);

			// Around the image.
			> a {
				@extend %link--element;

				flex-shrink: 0; // Prevent image smushing in mobile left/right layout.
				border:      initial; // Cancel out text-link spacing.
			}

			// Tagline.
			> p {
				--color: var(--color--secondary);

				--typography--size--override: 11;
				--typography--factor:         initial; // Since type is not scaling.

				max-width: calc(165 / 11 * 1em); // Preserve existing (default size) wrapping.

				a { @extend %link--text }
			}
		}



		// Two-column.
		@include width(568) {
			--main--wrap: calc(425 / 12 * 1em); // Preserve existing (default size) wrapping.

			column-gap:            var(--typography--line);
			grid-template-columns: minmax(0, min-content) minmax(0, var(--main--wrap));
			justify-content:       center;
			padding:               var(--typography--line--2) var(--typography--line);
			grid-template-areas:
				'banner  banner'
				'sidebar main  ';



			#Banner { margin-bottom: initial } // Reset extra mobile/portrait space.

			#Sidebar {
				--sticky--top: var(--typography--line-height);

				-webkit-mask:     initial; // Reset sticky-header properties.
				align-items:      end;
				align-self:       start;
				background-color: initial;
				flex-direction:   column;
				justify-self:     end;
				margin:           initial;
				overflow:         visible;
				padding:          initial;
				text-align:       right;
				width:            min-content;

				// Navigation.
				> ul {
					align-items:    end;
					flex-direction: column;
					margin-top:     var(--typography--line--2);
					row-gap:        var(--typography--lead);
				}
			}

			#Main { &:after { display: none } } // Turn off address-bar fade.



			// Tablets/comps.
			@include width(744) {
				@include tall(480) {
					column-gap: calc(var(--typography--line) * 2); // Horizontal, so twice optically (not baseline).
					padding:    var(--typography--line--4) var(--typography--line);
					row-gap:    var(--typography--line--4);

					#Sidebar {
						--sticky--top: var(--typography--line);

						height: calc(100vh - var(--typography--line) * 2);

						// Ad block.
						#SidebarMartini {
							align-items: end;
							display:     flex;
							flex-grow:   1;
							margin-top:  var(--typography--line--4);

							> div { // The JS-added container.
								align-items:    end;
								bottom:         var(--typography--line);
								flex-direction: column;
								position:       sticky;
							}
						}
					}

					// Hide main-column dupe.
					#MainMartini { display: none }
				}
			}
		}
	}
}
