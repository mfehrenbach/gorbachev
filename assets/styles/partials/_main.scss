@use 'utilities' as *;

@forward 'typography';
@forward 'fonts';
@forward 'links';



// Variables and layout.
body {
	@extend %font--verdana;
	@extend %typography--layout;



	--typography--size--floor:   14;
	--typography--size--middle:  16;
	--typography--size--ceiling: 22;

	--typography--leading: 1.8;
	--typography--size:    var(--typography--size--floor);

	--opacity--main:      90%;
	--opacity--secondary: 70%;
	--opacity--highlight: 13.333%;

	--color--slate: #4a525a;
	--color--white: hsla(0, 0%, 100%, var(--opacity--main));

	--color:             var(--color--white);
	--color--background: var(--color--slate);

	--color--active: hsla(0, 0%, 100%, var(--opacity--highlight));

	--link--enlargement: var(--typography--x);
	--link--outline:     2px;



	background-color: var(--color--slate);
	color:            var(--color--white);
	padding-left:     calc(env(safe-area-inset-left, 0rem) * 0.72); // Right to the notch edge.
	padding-right:    calc(env(safe-area-inset-right, 0rem) * 0.72);



	@include legacy {
		// Scale down for legacy devices, based on the viewport.
		--typography--factor: 1; // With the unit already in the calc.
		--typography--size:   calc(var(--typography--size--floor) / #{ $legacy-threshold } * 100vw);

		@include landscape { --typography--size: calc(var(--typography--size--floor) / #{ $legacy-threshold } * 100vh) }
	}

	@include width(768) {
		@include tall(480) {
			// Start scaling up type when there is room.
			--typography--factor: 1;
			--typography--size:   clamp(
															calc(var(--typography--size--floor) * 0.1rem),
															calc(var(--typography--size--floor) / 768 * 100vw),
															calc(var(--typography--size--middle) * 0.1rem)
														);
		}
	}

	@include width(1080) {
		@include tall(800) {
			// Further on tall screens, based on height.
			--typography--factor: 1;
			--typography--size:   clamp(
															calc(var(--typography--size--middle) * 0.1rem),
															calc(var(--typography--size--middle) / 800 * 100vh),
															calc(var(--typography--size--ceiling) * 0.1rem)
														);
		}
	}



	// Main layout.
	#Box {
		display: grid;
		padding: var(--typography--line) var(--typography--lead);
		row-gap: var(--typography--line);
		grid-template-areas:
			'banner'
			'sidebar'
			'main';



		#Banner {
			grid-area: banner;
			z-index:   1; // Over the sidebar.

			// The logo.
			a {
				@extend %link--element;

				--intrinsic--width:  720; // From the PNG.
				--intrinsic--height: 168;

				--content--width:  644; // Wordmark itself.
				--content--height: 72;

				--content--inset--left: 47;
				--content--inset--top:  44;

				--link--enlargement: calc(var(--typography--x) * 2); // Around circle overshoot.

				aspect-ratio: var(--content--width) / var(--content--height);
				box-sizing:   content-box; // Padding outside.
				height:       calc(var(--typography--cap) + var(--typography--lead));
				position:     relative;
				width:        auto;


				img {
					aspect-ratio: var(--intrinsic--width) / var(--intrinsic--height);
					filter:       brightness(1.16); // Take image to white.
					height:       initial; // Cancel inline.
					margin-left:  calc(-1 * var(--content--inset--left) / var(--content--width) * (100% - var(--link--enlargement) * 2));
					margin-top:   calc(-1 * var(--content--inset--top) / var(--content--width) * (100% - var(--link--enlargement) * 2));
					max-width:    initial; // Cancel reset.
					opacity:      var(--opacity--main); // Match body copy.
					position:     absolute;
					width:        calc(var(--intrinsic--width) / var(--content--width) * (100% - var(--link--enlargement) * 2));
					// Percentages derive from width, so use that for height offset too.

					// Sharpen up Safari scaling, particularly at 1x.
					@include browser(safari) { image-rendering: optimizeQuality }
				}
			}
		}



		#Sidebar {
			background-color: var(--color--slate);
			box-shadow:       0 0 var(--typography--line) var(--color--slate); // Buggy on reloads.
			column-gap:       calc(var(--typography--lead) * 4); // Double the internal nav gap.
			display:          flex;
			grid-area:        sidebar;
			margin-bottom:    calc(-1 * var(--typography--lead));
			margin-left:      calc(-1 * var(--typography--lead));
			margin-right:     calc(-1 * var(--typography--lead));
			margin-top:       calc(-1 * var(--typography--line));
			overflow-x:       scroll;
			padding-bottom:   var(--typography--lead);
			padding-left:     var(--typography--lead);
			padding-right:    var(--typography--lead);
			padding-top:      var(--typography--line);
			position:         sticky;
			top:              0;

			&::-webkit-scrollbar { display: none } // Hide scrollbar.

			// Byline.
			> p:first-child {
				@extend %font--extended;
				@extend %font--gill-sans--on-verdana;
				@extend nobr;

				strong { text-transform: uppercase }
			}

			// Navigation.
			> ul {
				column-gap: calc(var(--typography--lead) * 2); // Single not enough with spaces in links.
				display:    flex;

				> li {
					@extend %font--extended;
					@extend %font--gill-sans--on-verdana;
					@extend %typography;
					@extend nobr;

					text-transform: uppercase;

					> a { @extend %link--text }
				}
			}

			// Ad block.
			#SidebarMartini { display: none } // Hide on single-column (show dupe in main).
		}



		#Main { grid-area: main }



		// Ad block.
		#SidebarMartini {
			align-items: center;
			display:     flex;
			gap:         var(--typography--lead);

			// Around the image.
			> a {
				@extend %link--element;

				flex-shrink: 0; // Prevent image smushing in mobile left/right layout.
			}

		}



		// Two-column.
		@include width(568) {
			// Preserve existing (default size) wrapping.
			--legacy--column: 425;
			--legacy--type:   12;

			--main--column: calc(var(--legacy--column) / var(--legacy--type) * 1em);

			column-gap:            var(--typography--line);
			grid-template-columns: min-content minmax(0, var(--main--column));
			justify-content:       center;
			padding:               var(--typography--line) var(--typography--line);
			row-gap:               var(--typography--line);
			grid-template-areas:
				'banner  banner'
				'sidebar main  ';



			#Sidebar {
				align-items:      end;
				align-self:       start;
				background-color: initial;
				box-shadow:       initial;
				flex-direction:   column;
				justify-self:     end;
				margin:           initial;
				overflow:         visible;
				padding:          initial;
				row-gap:          var(--typography--line--2);
				text-align:       right;
				top:              var(--typography--lead);

				// Navigation.
				> ul {
					align-items:    end;
					flex-direction: column;
					row-gap:        var(--typography--lead);
				}

				// Ad block.
				#SidebarMartini {
					align-items:    end;
					display:        flex;
					flex-direction: column;
				}
			}



			// Hide main-column dupe.
			#Main #SidebarMartini { display: none }



			// Tablets/comps.
			@include tall(480) {
				column-gap: calc(var(--typography--line) * 2); // Horizontal, so twice optically (not baseline).
				padding:    var(--typography--line--2) var(--typography--line);
				row-gap:    var(--typography--line--2);

				#Sidebar { top: var(--typography--line) }
			}
		}
	}
}



// // Temporary stuff.
[id^=Zoom] { display: none }
