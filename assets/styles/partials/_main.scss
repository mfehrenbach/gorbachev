@use 'utilities' as *;

@forward 'typography';
@forward 'fonts';
@forward 'links';

@forward 'layout';



#Main {
	// Base spacing.
	> *:not(:first-child) { margin-top: var(--typography--line--4) }

	%--nested--spacing {
		> *:not(:first-child) { margin-top: var(--typography--line) }
	}

	%--double--after { // Bump specificity.
		+ *:not(:first-child):not(._) { margin-top: var(--typography--line--2) }
	}



	%--sticky-header--main {
		@extend %sticky-header;

		--sticky--chin:   var(--typography--line-height);
		--sticky--spacer: var(--typography--line);
		--sticky--top:    var(--sticky--offset);

		margin-bottom:  calc(-1 * var(--sticky--chin) - var(--sticky--fade));
		margin-top:     calc(-1 * var(--sticky--spacer));
		padding-bottom: calc(var(--sticky--chin) + var(--sticky--fade));
		padding-left:   calc(var(--typography--lead) + var(--typography--margin--left));
		padding-right:  calc(var(--typography--lead) + var(--typography--margin--right));
		padding-top:    var(--sticky--spacer);
		top:            var(--sticky--top);
		z-index:        1; // In front of siblings.

		@include width(568) {
			--sticky--spacer: var(--typography--line-height);
			--sticky--top:    0;

			@include browser(chrome) { --sticky--top: -0.01rem } // Prevent visible sliver above.

			@include width(640) {
				@include tall(600) {
					--sticky--chin:   var(--typography--line);
					--sticky--spacer: var(--typography--line);
				}
			}
		}
	}



	a {
		@extend %link--text;

		--color: var(--color--secondary);
	}

	strong {
		@extend %font--extended;
		@extend %font--gill-sans--in-verdana;
		@extend %font--uppercase;
		@extend %typography--inline;

		--color: var(--color--secondary)
	}

	blockquote {
		@extend %--nested--spacing;

		--color: var(--color--secondary);

		padding-left:  var(--typography--lead);
		padding-right: var(--typography--lead);
		position:      relative;

		a { // Down one more notch.
			--color:            var(--color--tertiary);
			--color--underline: var(--color--middle);
		}

		// The bar on the side.
		&:before {
			background-color: var(--color--middle);
			content:          '';
			height:           100%;
			left:             0;
			min-height:       calc(var(--typography--cap) + var(--typography--lead));
			position:         absolute;
			top:              50%;
			transform:        translateY(-50%); // Center single-line bar on text.
			width:            var(--typography--stroke);

			// Chrome rounds up for the width, but not for borders.
			@include browser (chrome) {
				background-color:  initial;
				border-left-color: var(--color--middle);
				border-left-style: solid;
				border-left-width: var(--typography--stroke);
			}
		}
	}



	ul, ol, {
		display:             flex;
		flex-direction:      column;
		list-style-position: outside;
		row-gap:             var(--typography--lead);

		> li {
			@extend %typography; // For “naked“ list items.

			display:       list-item;
			margin-bottom: var(--typography--margin--bottom);
			margin-top:    var(--typography--margin--top);

			&:before, &:after { display: none } // Conflicts with the marker, so use the margin.

			// Since the `li` is an acting type element.
			> p { &:first-child:before, &:last-child:after { display: none } }

			> p, > blockquote, > ul, > ol {
				// Space between nested block elements.
				&:not(:first-child) { margin-top: var(--typography--line) }
				// Extra line after them.
				&:last-child { margin-bottom: var(--typography--line-height) }
				// Two extra for multiple.
				&:not(:only-child):last-child { margin-bottom: calc(var(--typography--line-height) * 2) }
			}

			// Cancel these out for the last list items.
			&:last-child > *:last-child:not(._) { margin-bottom: initial }
		}
	}



	.dateline {
		@extend %--double--after;
		@extend %font--extended;
		@extend %font--gill-sans--on-verdana;
		@extend %font--uppercase;

		--color: var(--color--middle);
	}

	.permalink {
		@extend %typography--underline--disable;

		--color: var(--color--middle);

		// Add gap, cancel out the `&nbsp;`, enlargement, and letter-spacing.
		margin-left: calc(var(--typography--lead) - 1ch - var(--link--enlargement) + (var(--typography--inset--right--override) * 1em));

		@include hover { --color: var(--color--hover) } // Specificity.
	}



	> .linkedlist {
		> div { // New container from JS.
			display: flow-root; // Prevent margin collapse.

			&:not(:first-child) { margin-top: var(--typography--line--4) }

			> dt {
				@extend %--double--after;
				@extend %--sticky-header--main;
				@extend %font--extended;
				@extend %font--gill-sans--on-verdana;
				@extend %typography;
				@extend %font--uppercase;

				--color: var(--color--secondary);

				> a { @extend %typography--underline--disable }
			}

			> dd { @extend %--nested--spacing }
		}
	}



	> .article {
		@extend %--nested--spacing;

		display: flow-root; // Prevent margin collapse.

		> h1 {
			@extend %--sticky-header--main;
			@extend %--double--after;
			@extend %font--gill-sans--x-verdana-cap;

			> a {
				@extend %typography--underline--disable;

				--color: var(--color--primary);
			};
		}

		> h2 {
			@extend %--double--after;
			@extend %font--extended;
			@extend %font--gill-sans--on-verdana;
			@extend %font--uppercase;

			&:not(:first-child) { margin-top: var(--typography--line--4) } // Specificity match the wildcard.
		}
	}



	> .ookiaks {
		display:    flow-root; // Prevent margin collapse.
		margin-top: calc(var(--typography--line-height) * 2); // Just extra lines, no leading.

		// Smoke em’ if you got em.
		@include width(640) { @include tall(600) { margin-top: calc(var(--typography--line-height) * 4) } }
	}



	#MainMartini {
		@extend %--double--after;

		margin-top: var(--typography--line--2);
	}
}
