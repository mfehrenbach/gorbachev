@use 'utilities' as *;

@forward 'typography';
@forward 'fonts';
@forward 'links';



// Variables and layout.
body {
	@extend %font--verdana;
	@extend %typography--layout;



	--typography--size--floor:   14;
	--typography--size--middle:  18;
	--typography--size--ceiling: 22;

	--typography--leading: 1.8;
	--typography--size:    var(--typography--size--floor);

	--opacity--body: 90%;

	--color--slate: #4a525a;
	--color--white: hsla(0, 0%, 100%, var(--opacity--body));

	--color:             var(--color--white);
	--color--background: var(--color--slate);

	--color--active:  hsla(0, 0%, 100%, 10%);

	--link--enlargement: var(--typography--x);
	--link--outline:     2px;

	background-color: var(--color--slate);
	color:            var(--color--white);



	@include legacy {
		// Scale down for legacy devices, based on the viewport.
		--typography--factor: 1; // With the unit already in the calc.
		--typography--size:   calc(var(--typography--size--floor) / #{ $legacy-threshold } * 100vw);
	}

	@include width(768) {
		// Start scaling up type when there is room.
		--typography--factor: 1;
		--typography--size:   clamp(
														calc(var(--typography--size--floor) * 0.1rem),
														calc(var(--typography--size--floor) / 768 * 100vw),
														calc(var(--typography--size--middle) * 0.1rem)
													);
	}

	@include width(1080) {
		@include tall {
			// Further on tall screens, based on height.
			--typography--factor: 1;
			--typography--size:   clamp(
															calc(var(--typography--size--middle) * 0.1rem),
															calc(var(--typography--size--middle) / 900 * 100vh),
															calc(var(--typography--size--ceiling) * 0.1rem)
														);
		}
	}



	// Main layout.
	#Box {
		display: grid;
		padding: var(--typography--line) var(--typography--lead);
		row-gap: var(--typography--line);
		grid-template-areas:
			'banner'
			'sidebar'
			'main';

		#Banner {
			grid-area: banner;
			z-index:   1; // Over the sidebar.

			// The logo.
			a {
				@extend %link--element;

				--intrinsic--width:  720; // From the PNG.
				--intrinsic--height: 168;

				--content--width:  644; // Wordmark itself.
				--content--height: 72;

				--content--inset--left: 47;
				--content--inset--top:  44;

				--link--enlargement: calc(var(--typography--x) * 2); // Around circle overshoot.

				aspect-ratio: var(--content--width) / var(--content--height);
				box-sizing:   content-box; // Padding outside.
				height:       calc(var(--typography--cap) + var(--typography--lead));
				position:     relative;
				width:        auto;


				img {
					aspect-ratio: var(--intrinsic--width) / var(--intrinsic--height);
					filter:       brightness(1.16); // Take image to white.
					height:       initial; // Cancel inline.
					margin-left:  calc(-1 * var(--content--inset--left) / var(--content--width) * (100% - var(--link--enlargement) * 2));
					margin-top:   calc(-1 * var(--content--inset--top) / var(--content--width) * (100% - var(--link--enlargement) * 2));
					max-width:    initial; // Cancel reset.
					opacity:      var(--opacity--body); // Match body copy.
					position:     absolute;
					width:        calc(var(--intrinsic--width) / var(--content--width) * (100% - var(--link--enlargement) * 2));
					// Percentages derive from width, so use that for height offset too.

					// Sharpen up Safari scaling, particularly at 1x.
					@include browser(safari) { image-rendering: optimizeQuality }
				}
			}
		}

		#Sidebar {
			background-color: var(--color--slate);
			box-shadow:       0 0 var(--typography--line) var(--color--slate);
			grid-area:        sidebar;
			margin:           calc(-1 * var(--typography--lead));
			padding:          var(--typography--lead);
			position:         sticky;
			top:              0;
		}

		#Main {
			// Preserve existing (default size) wrapping.
			--legacy--column: 425;
			--legacy--type:   12;

			grid-area: main;
			max-width: calc(var(--legacy--column) / var(--legacy--type) * 1em);
		}



		// Two-column.
		@include width(768) {
			column-gap:      var(--typography--line--2);
			justify-content: center;
			padding:         var(--typography--line--2) var(--typography--lead);
			row-gap:         var(--typography--line--2);
			grid-template-areas:
				'banner  banner'
				'sidebar main  ';

			#Sidebar {
				align-self:       start;
				background-color: initial;
				box-shadow:       initial;
				justify-self:     end;
			}
		}
	}
}



// // Temporary stuff.
#Sidebar > ul, #SidebarMartini, [id^=Zoom] { display: none }
